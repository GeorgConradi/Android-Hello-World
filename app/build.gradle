apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    adbOptions {
        timeOutInMs 60000 // set timeout to 1 minute
    }
    defaultConfig {
        applicationId "at.conradi.helloworld"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
}

sourceSets {
	testLocal {
		java.srcDir file('src/test/java')
		resources.srcDir file('src/test/res')
	}
}
	    
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}
task localTest(type: Test, dependsOn: assemble) {
    testClassesDir = sourceSets.testLocal.output.classesDir
	android.sourceSets.main.java.srcDirs.each { dir ->
	    def buildDir = dir.getAbsolutePath().split('/')
	    buildDir = (buildDir[0..(buildDir.length - 4)] + ['build', 'classes', 'debug']).join('/')
	    sourceSets.testLocal.compileClasspath += files(buildDir)
	    sourceSets.testLocal.runtimeClasspath += files(buildDir)
	}
	classpath = sourceSets.testLocal.runtimeClasspath
}
check.dependsOn localTest
